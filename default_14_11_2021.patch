Index: neovim-notifications/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/neovim-notifications/pom.xml b/neovim-notifications/pom.xml
--- a/neovim-notifications/pom.xml	
+++ b/neovim-notifications/pom.xml	
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>parent</artifactId>
         <groupId>com.ensarsarajcic.neovim.java</groupId>
-        <version>0.2.4-SNAPSHOT</version>
+        <version>0.2.5-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: neovim-api/src/test/java/com/ensarsarajcic/neovim/java/api/NeovimStreamApiTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/neovim-api/src/test/java/com/ensarsarajcic/neovim/java/api/NeovimStreamApiTest.java b/neovim-api/src/test/java/com/ensarsarajcic/neovim/java/api/NeovimStreamApiTest.java
--- a/neovim-api/src/test/java/com/ensarsarajcic/neovim/java/api/NeovimStreamApiTest.java	
+++ b/neovim-api/src/test/java/com/ensarsarajcic/neovim/java/api/NeovimStreamApiTest.java	
@@ -24,16 +24,7 @@
 
 package com.ensarsarajcic.neovim.java.api;
 
-import com.ensarsarajcic.neovim.java.api.types.api.ChannelInfo;
-import com.ensarsarajcic.neovim.java.api.types.api.ClientAttributes;
-import com.ensarsarajcic.neovim.java.api.types.api.ClientInfo;
-import com.ensarsarajcic.neovim.java.api.types.api.ClientType;
-import com.ensarsarajcic.neovim.java.api.types.api.ClientVersionInfo;
-import com.ensarsarajcic.neovim.java.api.types.api.CommandInfo;
-import com.ensarsarajcic.neovim.java.api.types.api.GetCommandsOptions;
-import com.ensarsarajcic.neovim.java.api.types.api.MethodInfo;
-import com.ensarsarajcic.neovim.java.api.types.api.UiOptions;
-import com.ensarsarajcic.neovim.java.api.types.api.VimKeyMap;
+import com.ensarsarajcic.neovim.java.api.types.api.*;
 import com.ensarsarajcic.neovim.java.api.types.apiinfo.FunctionInfo;
 import com.ensarsarajcic.neovim.java.api.types.apiinfo.ParamInfo;
 import com.ensarsarajcic.neovim.java.api.types.apiinfo.TypeInfo;
@@ -54,12 +45,7 @@
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.ExecutionException;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
+import static org.junit.Assert.*;
 
 @RunWith(MockitoJUnitRunner.class)
 public class NeovimStreamApiTest extends BaseStreamApiTest {
@@ -72,6 +58,22 @@
         new NeovimStreamApi(null);
     }
 
+//    @Test
+//    public void atomicNotSupported() {
+//        try {
+//            neovimStreamApi.prepareAtomic();
+//            fail("Should have thrown unsupported operation exception");
+//        } catch (UnsupportedOperationException ex) {
+//
+//        }
+//        try {
+//            neovimStreamApi.sendAtomic(null);
+//            fail("Should have thrown unsupported operation exception");
+//        } catch (UnsupportedOperationException ex) {
+//
+//        }
+//    }
+
     @Test
     public void getHightlightByIdTest() throws ExecutionException, InterruptedException {
         // Happy case
Index: neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/types/api/UiOptions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/types/api/UiOptions.java b/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/types/api/UiOptions.java
--- a/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/types/api/UiOptions.java	
+++ b/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/types/api/UiOptions.java	
@@ -29,89 +29,68 @@
 
 @JsonIgnoreProperties(ignoreUnknown = true)
 public final class UiOptions {
+    public static final UiOptions TERMINAL = new UiOptions(false, false, false, false, false, false, false, false, false , false);
+    public static final UiOptions FULL_UI = new UiOptions(true, true, true, true, true, true, true, true, true, true);
 
     @JsonProperty("rgb")
     private final boolean rgb;
+    @JsonProperty("ext_popupmenu")
+    private final boolean extPopupMenu;
     @JsonProperty("override")
     private final boolean override;
-    @JsonProperty("ext_cmdline")
-    private final boolean extCmdline;
-    @JsonProperty("ext_hlstate")
-    private final boolean extHlState;
     @JsonProperty("ext_linegrid")
-    private final boolean extLineGrid;
+    private final boolean extLinegrid;
     @JsonProperty("ext_messages")
     private final boolean extMessages;
     @JsonProperty("ext_multigrid")
-    private final boolean extMultiGrid;
-    @JsonProperty("ext_popupmenu")
-    private final boolean extPopupMenu;
+    private final boolean extMultigrid;
+    @JsonProperty("ext_termcolors")
+    private final boolean extTermcolors;
     @JsonProperty("ext_tabline")
     private final boolean extTabline;
-    @JsonProperty("ext_termcolors")
-    private final boolean extTermColors;
+    @JsonProperty("ext_cmdline")
+    private final boolean extCmdline;
+    @JsonProperty("ext_wildmenu")
+    private final boolean extWildmenu;
 
     public UiOptions(
             @JsonProperty("rgb")
                     boolean rgb,
-            @JsonProperty("override")
-                    boolean override,
+            @JsonProperty("ext_popupmenu")
+                    boolean extPopupMenu,
+            @JsonProperty("ext_tabline")
+                    boolean extTabline,
             @JsonProperty("ext_cmdline")
                     boolean extCmdline,
-            @JsonProperty("ext_hlstate")
-                    boolean extHlState,
+            @JsonProperty("ext_wildmenu")
+                    boolean extWildmenu,
+            @JsonProperty("override")
+                    boolean override,
             @JsonProperty("ext_linegrid")
-                    boolean extLineGrid,
+                    boolean extLinegrid,
             @JsonProperty("ext_messages")
                     boolean extMessages,
             @JsonProperty("ext_multigrid")
-                    boolean extMultiGrid,
-            @JsonProperty("ext_popupmenu")
-                    boolean extPopupMenu,
-            @JsonProperty("ext_tabline")
-                    boolean extTabline,
+                    boolean extMultigrid,
             @JsonProperty("ext_termcolors")
-                    boolean extTermColors) {
+                    boolean extTermcolors
+            ) {
         this.rgb = rgb;
-        this.override = override;
-        this.extCmdline = extCmdline;
-        this.extHlState = extHlState;
-        this.extLineGrid = extLineGrid;
-        this.extMessages = extMessages;
-        this.extMultiGrid = extMultiGrid;
         this.extPopupMenu = extPopupMenu;
         this.extTabline = extTabline;
-        this.extTermColors = extTermColors;
+        this.extCmdline = extCmdline;
+        this.extWildmenu = extWildmenu;
+        this.override=override;
+        this.extLinegrid=extLinegrid;
+        this.extMessages = extMessages;
+        this.extMultigrid=extMultigrid;
+        this.extTermcolors=extTermcolors;
     }
 
     public boolean isRgb() {
         return rgb;
     }
 
-    public boolean isOverride() {
-        return override;
-    }
-
-    public boolean isExtCmdline() {
-        return extCmdline;
-    }
-
-    public boolean isExtHlState() {
-        return extHlState;
-    }
-
-    public boolean isExtLineGrid() {
-        return extLineGrid;
-    }
-
-    public boolean isExtMessages() {
-        return extMessages;
-    }
-
-    public boolean isExtMultiGrid() {
-        return extMultiGrid;
-    }
-
     public boolean isExtPopupMenu() {
         return extPopupMenu;
     }
@@ -120,32 +99,11 @@
         return extTabline;
     }
 
-    public boolean isExtTermColors() {
-        return extTermColors;
+    public boolean isExtCmdline() {
+        return extCmdline;
     }
 
-    public static final UiOptions TERMINAL = new UiOptions(
-            false,
-            false,
-            false,
-            false,
-            false,
-            false,
-            false,
-            false,
-            false,
-            false
-    );
-    public static final UiOptions FULL_UI = new UiOptions(
-            true,
-            true,
-            true,
-            true,
-            true,
-            true,
-            true,
-            true,
-            true,
-            true
-    );
+    public boolean isExtWildmenu() {
+        return extWildmenu;
+    }
 }
Index: core-rpc/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core-rpc/pom.xml b/core-rpc/pom.xml
--- a/core-rpc/pom.xml	
+++ b/core-rpc/pom.xml	
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>parent</artifactId>
         <groupId>com.ensarsarajcic.neovim.java</groupId>
-        <version>0.2.4-SNAPSHOT</version>
+        <version>0.2.5-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: neovim-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/neovim-api/pom.xml b/neovim-api/pom.xml
--- a/neovim-api/pom.xml	
+++ b/neovim-api/pom.xml	
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>parent</artifactId>
         <groupId>com.ensarsarajcic.neovim.java</groupId>
-        <version>0.2.4-SNAPSHOT</version>
+        <version>0.2.5-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/NeovimApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/NeovimApi.java b/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/NeovimApi.java
--- a/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/NeovimApi.java	
+++ b/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/NeovimApi.java	
@@ -24,7 +24,6 @@
 
 package com.ensarsarajcic.neovim.java.api;
 
-import com.ensarsarajcic.neovim.java.api.atomic.AtomicCallResponse;
 import com.ensarsarajcic.neovim.java.api.buffer.NeovimBufferApi;
 import com.ensarsarajcic.neovim.java.api.tabpage.NeovimTabpageApi;
 import com.ensarsarajcic.neovim.java.api.types.api.ChannelInfo;
@@ -44,6 +43,7 @@
 import com.ensarsarajcic.neovim.java.api.types.msgpack.Buffer;
 import com.ensarsarajcic.neovim.java.api.types.msgpack.Tabpage;
 import com.ensarsarajcic.neovim.java.api.types.msgpack.Window;
+import com.ensarsarajcic.neovim.java.api.types.apiinfo.ApiInfo;
 import com.ensarsarajcic.neovim.java.api.window.NeovimWindowApi;
 import com.ensarsarajcic.neovim.java.corerpc.message.RequestMessage;
 
@@ -129,8 +129,9 @@
     String SELECT_POPUPMENU_ITEM = "nvim_select_popupmenu_item";
     // endregion
 
-    @NeovimApiFunction(name = CALL_ATOMIC, since = 1)
-    CompletableFuture<AtomicCallResponse> sendAtomic(List<RequestMessage> requestMessages);
+//    @NeovimApiFunction(name = CALL_ATOMIC, since = 1)
+//    CompletableFuture<AtomicResponse> sendAtomic(RequestMessage... requests);
+//    AtomicCallBuilder prepareAtomic();
 
     @NeovimApiFunction(name = GET_HIGHLIGHT_BY_ID, since = 3)
     CompletableFuture<Map> getHighlightById(int id, boolean rgb);
Index: core-rpc/src/test/java/com/ensarsarajcic/neovim/java/corerpc/message/NotificationMessageBuilderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/core-rpc/src/test/java/com/ensarsarajcic/neovim/java/corerpc/message/NotificationMessageBuilderTest.java b/core-rpc/src/test/java/com/ensarsarajcic/neovim/java/corerpc/message/NotificationMessageBuilderTest.java
--- a/core-rpc/src/test/java/com/ensarsarajcic/neovim/java/corerpc/message/NotificationMessageBuilderTest.java	
+++ b/core-rpc/src/test/java/com/ensarsarajcic/neovim/java/corerpc/message/NotificationMessageBuilderTest.java	
@@ -24,12 +24,19 @@
 
 package com.ensarsarajcic.neovim.java.corerpc.message;
 
+import com.fasterxml.jackson.databind.JsonNode;
+import com.fasterxml.jackson.databind.JsonSerializable;
+import com.fasterxml.jackson.databind.node.ArrayNode;
+import com.fasterxml.jackson.databind.node.IntNode;
+import com.fasterxml.jackson.databind.node.JsonNodeFactory;
+import com.fasterxml.jackson.databind.node.POJONode;
 import org.junit.Test;
+import org.msgpack.jackson.dataformat.MessagePackExtensionType;
 
 import java.util.ArrayList;
+import java.util.List;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotEquals;
+import static org.junit.Assert.*;
 
 public class NotificationMessageBuilderTest {
 
@@ -148,4 +155,13 @@
         // To string doesn't crash
         var result = builder.build().toString();
     }
+//
+//    @Test
+//    public void testMsgPackNotification() {
+//        // Given a builder with some defaults
+//        JsonNode msgpackNode = new ArrayNode(new JsonNodeFactory(false), List.of(new POJONode(new MessagePackExtensionType((byte)0, new byte[]{2}))));
+//        JsonNode intNode = new ArrayNode(new JsonNodeFactory(false), List.of(new IntNode(1)));
+//        System.out.println(intNode.toString());
+//        System.out.println(msgpackNode.toString());
+//    }
 }
\ No newline at end of file
Index: neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/NeovimStreamApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/NeovimStreamApi.java b/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/NeovimStreamApi.java
--- a/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/NeovimStreamApi.java	
+++ b/neovim-api/src/main/java/com/ensarsarajcic/neovim/java/api/NeovimStreamApi.java	
@@ -24,36 +24,24 @@
 
 package com.ensarsarajcic.neovim.java.api;
 
-import com.ensarsarajcic.neovim.java.api.atomic.AtomicCallResponse;
 import com.ensarsarajcic.neovim.java.api.buffer.BufferStreamApi;
 import com.ensarsarajcic.neovim.java.api.buffer.NeovimBufferApi;
 import com.ensarsarajcic.neovim.java.api.tabpage.NeovimTabpageApi;
 import com.ensarsarajcic.neovim.java.api.tabpage.TabpageStreamApi;
-import com.ensarsarajcic.neovim.java.api.types.api.ChannelInfo;
-import com.ensarsarajcic.neovim.java.api.types.api.ClientAttributes;
-import com.ensarsarajcic.neovim.java.api.types.api.ClientType;
-import com.ensarsarajcic.neovim.java.api.types.api.ClientVersionInfo;
-import com.ensarsarajcic.neovim.java.api.types.api.CommandInfo;
-import com.ensarsarajcic.neovim.java.api.types.api.GetCommandsOptions;
-import com.ensarsarajcic.neovim.java.api.types.api.MethodInfo;
-import com.ensarsarajcic.neovim.java.api.types.api.Mouse;
-import com.ensarsarajcic.neovim.java.api.types.api.UiInfo;
-import com.ensarsarajcic.neovim.java.api.types.api.UiOptions;
-import com.ensarsarajcic.neovim.java.api.types.api.VimColorMap;
-import com.ensarsarajcic.neovim.java.api.types.api.VimKeyMap;
-import com.ensarsarajcic.neovim.java.api.types.api.VimMode;
+import com.ensarsarajcic.neovim.java.api.types.api.*;
+import com.ensarsarajcic.neovim.java.api.types.msgpack.*;
 import com.ensarsarajcic.neovim.java.api.types.apiinfo.ApiInfo;
-import com.ensarsarajcic.neovim.java.api.types.msgpack.Buffer;
-import com.ensarsarajcic.neovim.java.api.types.msgpack.Tabpage;
-import com.ensarsarajcic.neovim.java.api.types.msgpack.Window;
 import com.ensarsarajcic.neovim.java.api.window.NeovimWindowApi;
 import com.ensarsarajcic.neovim.java.api.window.WindowStreamApi;
 import com.ensarsarajcic.neovim.java.corerpc.message.RequestMessage;
 import com.ensarsarajcic.neovim.java.corerpc.reactive.ReactiveRpcStreamer;
 
+import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 import java.util.concurrent.CompletableFuture;
+import java.util.function.Supplier;
 import java.util.stream.Collectors;
 
 /**
@@ -66,20 +54,20 @@
         super(reactiveRpcStreamer);
     }
 
-    @Override
-    public CompletableFuture<AtomicCallResponse> sendAtomic(List<RequestMessage> requestMessages) {
-        var requestArgs = List.of(
-                requestMessages.stream()
-                        .map(
-                                requestMessage -> List.of(requestMessage.getMethod(), requestMessage.getArguments())
-                        ).collect(Collectors.toList())
+    public CompletableFuture<AtomicResponse> sendAtomic(RequestMessage... requests) {
+        var builder = new RequestMessage.Builder(NeovimApi.CALL_ATOMIC)
+                .addArguments(
+                        Arrays.stream(requests).map(request ->
+                                new Object[]{request.getMethod(), request.getArguments()}
+                        ).collect(Collectors.toCollection((Supplier<ArrayList<Object>>) ArrayList::new))
         );
-        return sendWithResponseOfType(
-                new RequestMessage.Builder(CALL_ATOMIC)
-                        .addArgument(requestArgs),
-                AtomicCallResponse.class
-        );
+        return sendWithResponseOfType(builder, AtomicResponse.class);
     }
+
+//    @Override
+//    public AtomicCallBuilder prepareAtomic() {
+//        throw new UnsupportedOperationException("Not yet implemented");
+//    }
 
     // TODO Add highlight definition
     @Override
Index: rplugin-example/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/rplugin-example/pom.xml b/rplugin-example/pom.xml
--- a/rplugin-example/pom.xml	
+++ b/rplugin-example/pom.xml	
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>parent</artifactId>
         <groupId>com.ensarsarajcic.neovim.java</groupId>
-        <version>0.2.4-SNAPSHOT</version>
+        <version>0.2.5-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: reactive-core-rpc/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/reactive-core-rpc/pom.xml b/reactive-core-rpc/pom.xml
--- a/reactive-core-rpc/pom.xml	
+++ b/reactive-core-rpc/pom.xml	
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>parent</artifactId>
         <groupId>com.ensarsarajcic.neovim.java</groupId>
-        <version>0.2.4-SNAPSHOT</version>
+        <version>0.2.5-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: neovim-notifications/src/main/java/com/ensarsarajcic/neovim/java/notifications/buffer/BufferChangedTickEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/neovim-notifications/src/main/java/com/ensarsarajcic/neovim/java/notifications/buffer/BufferChangedTickEvent.java b/neovim-notifications/src/main/java/com/ensarsarajcic/neovim/java/notifications/buffer/BufferChangedTickEvent.java
--- a/neovim-notifications/src/main/java/com/ensarsarajcic/neovim/java/notifications/buffer/BufferChangedTickEvent.java	
+++ b/neovim-notifications/src/main/java/com/ensarsarajcic/neovim/java/notifications/buffer/BufferChangedTickEvent.java	
@@ -40,7 +40,7 @@
             ObjectMapper objectMapper = ObjectMappers.defaultNeovimMapper();
             return new BufferChangedTickEvent(
                     objectMapper.readerFor(Buffer.class).readValue(objectMapper.writeValueAsBytes(list.get(0))),
-                    (Long) list.get(1)
+                    (Integer) list.get(1)
             );
         } catch (IOException e) {
             e.printStackTrace();
Index: api-explorer/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api-explorer/pom.xml b/api-explorer/pom.xml
--- a/api-explorer/pom.xml	
+++ b/api-explorer/pom.xml	
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>parent</artifactId>
         <groupId>com.ensarsarajcic.neovim.java</groupId>
-        <version>0.2.4-SNAPSHOT</version>
+        <version>0.2.5-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: testing-helpers/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/testing-helpers/pom.xml b/testing-helpers/pom.xml
--- a/testing-helpers/pom.xml	
+++ b/testing-helpers/pom.xml	
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>parent</artifactId>
         <groupId>com.ensarsarajcic.neovim.java</groupId>
-        <version>0.2.4-SNAPSHOT</version>
+        <version>0.2.5-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: neovim-rx-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/neovim-rx-api/pom.xml b/neovim-rx-api/pom.xml
--- a/neovim-rx-api/pom.xml	
+++ b/neovim-rx-api/pom.xml	
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>parent</artifactId>
         <groupId>com.ensarsarajcic.neovim.java</groupId>
-        <version>0.2.4-SNAPSHOT</version>
+        <version>0.2.5-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: handler-annotations/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/handler-annotations/pom.xml b/handler-annotations/pom.xml
--- a/handler-annotations/pom.xml	
+++ b/handler-annotations/pom.xml	
@@ -5,7 +5,7 @@
     <parent>
         <artifactId>parent</artifactId>
         <groupId>com.ensarsarajcic.neovim.java</groupId>
-        <version>0.2.4-SNAPSHOT</version>
+        <version>0.2.5-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
Index: unix-socket-connection/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/unix-socket-connection/pom.xml b/unix-socket-connection/pom.xml
--- a/unix-socket-connection/pom.xml	
+++ b/unix-socket-connection/pom.xml	
@@ -28,7 +28,7 @@
     <parent>
         <artifactId>parent</artifactId>
         <groupId>com.ensarsarajcic.neovim.java</groupId>
-        <version>0.2.4-SNAPSHOT</version>
+        <version>0.2.5-SNAPSHOT</version>
     </parent>
     <modelVersion>4.0.0</modelVersion>
 
